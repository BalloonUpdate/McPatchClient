# server是更新服务器的地址，是最重要的参数
# 目前支持客户端支持三种服务器源：http源、webdav源、sftp源
#
#   http源例子：
#     1. http://127.0.0.1:6600  （默认形式，http协议）
#     2. https://127.0.0.1:6600/subfolder  （子目录形式，末尾不要加斜线，https协议）
#        -----   --------- ---- ---------
#           |        |      |       |
#           |        |      |       +------ 子目录（可选）
#           |        |      +-------------- 端口
#           |        +--------------------- 地址
#           +------------------------------ 协议名称，只能是http或者https
#
#   webdav源：（webdav源的格式和http源很相似，注意webdav代表走http协议，webdavs代表走https协议，这样写是为了和http源做区分）
#     1. webdav://user:pass:127.0.0.1:80 （默认形式，webdav使用http协议）
#     2. webdavs://user:pass:127.0.0.1:443/subfolder （子目录形式，webdav使用https协议，注意https默认端口为443，而非80）
#        -------   ---- ---- --------- --- ---------
#           |       |    |       |      |      |
#           |       |    |       |      |      +------ webdav 目录（可选）
#           |       |    |       |      +------------- webdav 端口（注意端口不能省略，通常是80和443
#           |       |    |       +-------------------- webdav 主机地址
#           |       |    +---------------------------- webdav 密码
#           |       +--------------------------------- webdav 用户名
#           +----------------------------------------- webdav 协议，只能是webdav或者webdavs
#
#   sftp源例子： （切勿直接使用Linux登录端口做sftp源，会有极大安全隐患，请使用专业sftp服务器软件！）
#     1. sftp://user:pass:f0:91:07:33:28:19:c5:2c:ea:e4:a9:2b:41:ce:3d:63@192.168.5.133:22/  （默认形式，工作目录本身）
#     2. sftp://user:pass:f0:91:07:33:28:19:c5:2c:ea:e4:a9:2b:41:ce:3d:63@192.168.5.133:22/subfolder  （相对目录形式，末尾无斜线）
#     3. sftp://user:pass:f0:91:07:33:28:19:c5:2c:ea:e4:a9:2b:41:ce:3d:63@192.168.5.133:22//subfolder  （绝对目录形式，末尾无斜线）
#        ----   ---- ---- ----------------------------------------------- ------------- -- ----------
#         |      |    |                           |                             |       |       |
#         |      |    +----  密码        主机指纹（请自行确保指纹可信）         |       |       +------- 子目录（可选）
#         |      +---------  用户                                               |       +--------------- 端口，通常是22
#         +----------------  协议名称，只能是sftp                               +----------------------- 主机地址
#        主机指纹支持以下格式
#          1. SHA1:2Fo8c/96zv32xc8GZWbOGYOlRak=  （sha1指纹格式）
#          2. SHA256:oQGbQTujGeNIgh0ONthcEpA/BHxtt3rcYY+NxXTxQjs=  （sha256指纹格式）
#          3. MD5:d3:5e:40:72:db:08:f1:6d:0c:d7:6d:35:0d:ba:7c:32  （md5十六进制冒号分隔形式）
#          4. d3:5e:40:72:db:08:f1:6d:0c:d7:6d:35:0d:ba:7c:32  （base64编码过的sha1指纹格式或者sha256指纹格式）
#
# 支持多个备用更新源，可以写成“YAML列表语法”的形式来使用多个备用源
# 遇到网络问题时会从上往下依次切换备用的更新源。下面是例子：
#
# server:
#   - http://127.0.0.1:6600 # 首选源
#   - http://localhost:6600 # 第二个备用源
#   - http://[::1]:6600 # 第三个备用源
#
server: http://127.0.0.1:6600

# 是否禁用界面主题
# true: 禁用界面主题，可以解决窗口出现无响应的问题！
# false: 不会禁用界面主题，运行在某些机器上时可能会出现窗口出现无响应的问题！
disable-theme: false

# 是否在没有任何更新时，显示暂无更新的对话框（通常是：资源文件暂无更新!）
# true：更新完成后会显示“暂无更新”的对话框，需要手点确定
# false：更新完成后会自动退出，无需手动操作
# 本地调试环境建议开启，线上环境建议关闭。当quiet-mode开启时，本设置会被强制覆盖为false，无法变更。
show-finish-message: true

# 是否显示更新记录
# true：每次更新完后都会弹出窗口显示更新记录
# false：更新完成后不会弹出更新记录窗口而是继续下载下一个更新
show-changelogs-message: true

# 是否自动关闭更新记录窗口（无论是否操作）
# 设置为0来禁用这个功能
changelogs-auto-close: 0

# 安静模式（默认不开启此选项）
# true: 程序启动后不显示窗口，会在后台静默检查文件更新，如果没有更新就直接启动Minecraft，
#       如果有更新再显示下载进度条窗口，此选项可以尽可能将更新助手的存在感降低（只在下载文件时显示窗口）
# false: 程序启动后每次都显示窗口，并在窗口中显示检查文件的进度和下载文件的进度，一切妥当后启动Minecraft
# 此选项仅仅当程序以图型界面模式启动时有效
# 本地调试环境建议关闭，线上环境建议开启
quiet-mode: false

# 更新时如果发生错误（尤其是网络原因）时，是否继续进入游戏，而不是使游戏崩溃（默认不开启此选项）
# true: 如果更新发生错误，继续启动Minecraft游戏
# false：如果更新发生错误，强制使Minecraft崩溃，停止启动过程
# 如果需要区分是更新问题还是游戏本身的问题，请查看游戏启动日志
# 此选项仅当程序以JavaAgent模式（非图形模式）启动时有效
no-throwing: false

# 全局http连接超时（单位毫秒，仅对http源有效）
http-connect-timeout: 3000

# 全局http响应超时（单位毫秒，仅对http源有效）
http-response-timeout: 5000

# 出现网络问题时的重试次数（对所有源有效）
retry-times: 5

# 多线程下载时使用的线程数，仅对http源有效，且需要服务端支持断点续传功能
# 自带的MiniHTTPServer不支持断点续传！
concurrent-threads: 4

# 多线程下载时每个文件块的大小
concurrent-block-size: 4194304 # 默认为4mb

# 如果客户端当前版本号在服务端的版本列表里不存在时（即版本号损坏），是否自动重头开始下载所有版本
# true：如果客户端版本号出现问题，会从新下载一遍服务端的所有版本以达到修复文件的目的
# false：如果客户端版本号出现问题，会直接报错而不会进行任何额外动作
# 如果选择开启这个选项，重下所有版本，可以自动修复客户端，但会比较费时间和费流量，请仔细权衡
auto-restart-version: true

# 存储当前版本号的文件（一般无需修改此选项）
# 起始目录为程序Jar文件所在目录
version-file: mc-patch-version.txt

# 自定义Http协议头，仅对Http源和Webdav源生效
# 某些自定义头不会生效，例如 Content-Length 和 Content-Encoding 等等
http-headers:
#  User-Agent: This filled by youself # 这是一个自定义UserAgent的配置示例

# 此选项用来指定“更新起始目录”，也就是把文件都更新到哪里去。（此目录会从工作目录开始计算）
# 默认情况下，程序会智能搜索.minecraft目录的父目录作为更新起始目录，因此通常不需要手动调整此选项
# 若你要手动指定一个“更新起始目录”，请参考下面的示例
# 示例一、此选项值设置为 '.' 可以将程序工作目录锁定为更新起始目录（同时会禁用自动搜索机制）
# 示例二、此选项值设置为 '../' 可以将程序工作目录的上级目录锁定为更新起始目录（同时会禁用自动搜索机制）
# 示例三、此选项值设置为 'abc' 可以将程序工作目录下的abc目录锁定为更新起始目录（同时会禁用自动搜索机制）
# 示例四、此选项值设置为 '' 也就是空字符串（默认值），程序会智能搜索.minecraft目录的父目录作为更新起始目录
base-path: ''